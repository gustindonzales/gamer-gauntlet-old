// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@use "@angular/material" as mat;
@use "@angular/material-experimental" as matx;
mat.$theme-ignore-duplication-warnings: true;

// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!

@include mat.core();

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$gamer-gauntlet-primary: mat.define-palette(
  mat.$deep-purple-palette,
  500,
  300,
  700
);
$gamer-gauntlet-accent: mat.define-palette(mat.$teal-palette, 500, 300, 700);

// The warn palette is optional (defaults to red).
$gamer-gauntlet-warn: mat.define-palette(mat.$red-palette);

// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".
$gamer-gauntlet-theme: mat.define-dark-theme(
  (
    color: (
      primary: $gamer-gauntlet-primary,
      accent: $gamer-gauntlet-accent,
      warn: $gamer-gauntlet-warn,
    ),
    typography: mat.define-typography-config(),
    density: 0,
  )
);

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
//@include mat.all-component-themes($gamer-gauntlet-theme);

$m3-dark-theme: matx.define-theme(
  (
    color: (
      theme-type: dark,
      primary: matx.$m3-violet-palette,
      tertiary: matx.$m3-cyan-palette,
    ),
  )
);

$m3-light-theme: matx.define-theme(
  (
    color: (
      primary: matx.$m3-violet-palette,
      tertiary: matx.$m3-cyan-palette,
    ),
  )
);
